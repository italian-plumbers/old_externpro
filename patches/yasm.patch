diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8df871cf..38a994da 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,5 @@
+CMAKE_MINIMUM_REQUIRED(VERSION 2.4...3.21)
 PROJECT(yasm)
-CMAKE_MINIMUM_REQUIRED(VERSION 2.4)
 if (COMMAND cmake_policy)
     cmake_policy(SET CMP0003 NEW)
 endif (COMMAND cmake_policy)
@@ -9,6 +9,7 @@ OPTION(BUILD_SHARED_LIBS "Build shared libraries" ON)
 # Where to look first for cmake modules
 set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules")
 
+INCLUDE(GNUInstallDirs)
 INCLUDE(YasmMacros)
 INCLUDE(VersionGen)
 
@@ -35,13 +36,23 @@ INCLUDE_DIRECTORIES(AFTER ${CMAKE_BINARY_DIR} ${yasm_SOURCE_DIR})
 
 INCLUDE(ConfigureChecks.cmake)
 
+OPTION(XP_INSTALL_YASM_EXE_ONLY "Only install the yasm executable" OFF)
+IF(XP_INSTALL_YASM_EXE_ONLY)
+  SET(OPT_INSTALL EXCLUDE_FROM_ALL)
+ELSE()
+  SET(OPT_INSTALL)
+ENDIF()
+SET(targetsFile ${PROJECT_NAME}-targets)
+
 ADD_SUBDIRECTORY(tools)
 ADD_SUBDIRECTORY(libyasm)
 ADD_SUBDIRECTORY(modules)
 ADD_SUBDIRECTORY(frontends)
 
+INSTALL(EXPORT ${targetsFile} DESTINATION ${CMAKE_INSTALL_BINDIR}/cmake ${OPT_INSTALL})
+
 INSTALL(FILES
     libyasm.h
     ${CMAKE_BINARY_DIR}/libyasm-stdint.h
-    DESTINATION include
+    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} ${OPT_INSTALL}
     )
diff --git a/ConfigureChecks.cmake b/ConfigureChecks.cmake
index 4b05d048..8190989e 100644
--- a/ConfigureChecks.cmake
+++ b/ConfigureChecks.cmake
@@ -34,10 +34,10 @@ CONFIGURE_FILE(config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
 
 ADD_DEFINITIONS(-DHAVE_CONFIG_H)
 
-INCLUDE(FindPythonInterp)
-IF (NOT PYTHON_EXECUTABLE)
+INCLUDE(FindPython)
+IF (NOT Python_EXECUTABLE)
     MESSAGE(FATAL_ERROR "Could not find Python executable")
-ENDIF (NOT PYTHON_EXECUTABLE)
+ENDIF (NOT Python_EXECUTABLE)
 
 IF (CMAKE_COMPILER_IS_GNUCXX)
     CHECK_C_COMPILER_FLAG(-pipe C_ACCEPTS_PIPE)
diff --git a/cmake/modules/YasmMacros.cmake b/cmake/modules/YasmMacros.cmake
index ab1be00e..db61eeae 100644
--- a/cmake/modules/YasmMacros.cmake
+++ b/cmake/modules/YasmMacros.cmake
@@ -58,31 +58,28 @@ macro (YASM_ADD_MODULE _module_NAME)
 endmacro (YASM_ADD_MODULE)
 
 macro (YASM_GENPERF _in_NAME _out_NAME)
-    get_target_property(_tmp_GENPERF_EXE genperf LOCATION)
     add_custom_command(
         OUTPUT ${_out_NAME}
-        COMMAND ${_tmp_GENPERF_EXE} ${_in_NAME} ${_out_NAME}
-        DEPENDS ${_tmp_GENPERF_EXE}
+        COMMAND genperf ${_in_NAME} ${_out_NAME}
+        DEPENDS genperf
         MAIN_DEPENDENCY ${_in_NAME}
         )
 endmacro (YASM_GENPERF)
 
 macro (YASM_RE2C _in_NAME _out_NAME)
-    get_target_property(_tmp_RE2C_EXE re2c LOCATION)
     add_custom_command(
         OUTPUT ${_out_NAME}
-        COMMAND ${_tmp_RE2C_EXE} ${ARGN} -o ${_out_NAME} ${_in_NAME}
-        DEPENDS ${_tmp_RE2C_EXE}
+        COMMAND re2c ${ARGN} -o ${_out_NAME} ${_in_NAME}
+        DEPENDS re2c
         MAIN_DEPENDENCY ${_in_NAME}
         )
 endmacro (YASM_RE2C)
 
 macro (YASM_GENMACRO _in_NAME _out_NAME _var_NAME)
-    get_target_property(_tmp_GENMACRO_EXE genmacro LOCATION)
     add_custom_command(
         OUTPUT ${_out_NAME}
-        COMMAND ${_tmp_GENMACRO_EXE} ${_out_NAME} ${_var_NAME} ${_in_NAME}
-        DEPENDS ${_tmp_GENMACRO_EXE}
+        COMMAND genmacro ${_out_NAME} ${_var_NAME} ${_in_NAME}
+        DEPENDS genmacro
         MAIN_DEPENDENCY ${_in_NAME}
         )
 endmacro (YASM_GENMACRO)
diff --git a/frontends/tasm/CMakeLists.txt b/frontends/tasm/CMakeLists.txt
index e275ab84..3316aa05 100644
--- a/frontends/tasm/CMakeLists.txt
+++ b/frontends/tasm/CMakeLists.txt
@@ -5,7 +5,7 @@ INCLUDE_DIRECTORIES(
 
 ADD_CUSTOM_COMMAND(
     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/license.c
-    COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_SOURCE_DIR}/frontends/yasm/genstring.py
+    COMMAND ${Python_EXECUTABLE} ${CMAKE_SOURCE_DIR}/frontends/yasm/genstring.py
         license_msg
         ${CMAKE_CURRENT_BINARY_DIR}/license.c
         ${CMAKE_SOURCE_DIR}/COPYING
@@ -34,4 +34,4 @@ SET_SOURCE_FILES_PROPERTIES(tasm.c PROPERTIES
     OBJECT_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/license.c
     )
 
-INSTALL(TARGETS ytasm RUNTIME DESTINATION bin)
+INSTALL(TARGETS ytasm EXPORT ${targetsFile} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} ${OPT_INSTALL})
diff --git a/frontends/vsyasm/CMakeLists.txt b/frontends/vsyasm/CMakeLists.txt
index 6815b18d..fd67f77a 100644
--- a/frontends/vsyasm/CMakeLists.txt
+++ b/frontends/vsyasm/CMakeLists.txt
@@ -5,7 +5,7 @@ INCLUDE_DIRECTORIES(
 
 ADD_CUSTOM_COMMAND(
     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/license.c
-    COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_SOURCE_DIR}/frontends/yasm/genstring.py
+    COMMAND ${Python_EXECUTABLE} ${CMAKE_SOURCE_DIR}/frontends/yasm/genstring.py
         license_msg
         ${CMAKE_CURRENT_BINARY_DIR}/license.c
         ${CMAKE_SOURCE_DIR}/COPYING
@@ -34,4 +34,4 @@ SET_SOURCE_FILES_PROPERTIES(vsyasm.c PROPERTIES
     OBJECT_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/license.c
     )
 
-INSTALL(TARGETS vsyasm RUNTIME DESTINATION bin)
+INSTALL(TARGETS vsyasm EXPORT ${targetsFile} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} ${OPT_INSTALL})
diff --git a/frontends/yasm/CMakeLists.txt b/frontends/yasm/CMakeLists.txt
index b11d7f82..03b10398 100644
--- a/frontends/yasm/CMakeLists.txt
+++ b/frontends/yasm/CMakeLists.txt
@@ -2,7 +2,7 @@ INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
 
 ADD_CUSTOM_COMMAND(
     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/license.c
-    COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/genstring.py
+    COMMAND ${Python_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/genstring.py
         license_msg
         ${CMAKE_CURRENT_BINARY_DIR}/license.c
         ${CMAKE_SOURCE_DIR}/COPYING
@@ -31,4 +31,4 @@ SET_SOURCE_FILES_PROPERTIES(yasm.c PROPERTIES
     OBJECT_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/license.c
     )
 
-INSTALL(TARGETS yasm RUNTIME DESTINATION bin)
+INSTALL(TARGETS yasm EXPORT ${targetsFile} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
diff --git a/libyasm/CMakeLists.txt b/libyasm/CMakeLists.txt
index bd9b7b28..cced2057 100644
--- a/libyasm/CMakeLists.txt
+++ b/libyasm/CMakeLists.txt
@@ -42,10 +42,11 @@ ELSE(BUILD_SHARED_LIBS)
         )
 ENDIF(BUILD_SHARED_LIBS)
 
-INSTALL(TARGETS libyasm
-    RUNTIME DESTINATION bin
-    LIBRARY DESTINATION lib
-    ARCHIVE DESTINATION lib
+INSTALL(TARGETS libyasm EXPORT ${targetsFile}
+    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    ${OPT_INSTALL}
     )
 
 INSTALL(FILES
@@ -76,5 +77,6 @@ INSTALL(FILES
     symrec.h
     valparam.h
     value.h
-    DESTINATION include/libyasm
+    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/libyasm
+    ${OPT_INSTALL}
     )
diff --git a/modules/arch/x86/CMakeLists.txt b/modules/arch/x86/CMakeLists.txt
index d15c9948..4b4f735a 100644
--- a/modules/arch/x86/CMakeLists.txt
+++ b/modules/arch/x86/CMakeLists.txt
@@ -3,7 +3,7 @@ ADD_CUSTOM_COMMAND(
         ${CMAKE_CURRENT_BINARY_DIR}/x86insns.c
         ${CMAKE_CURRENT_BINARY_DIR}/x86insn_gas.gperf
         ${CMAKE_CURRENT_BINARY_DIR}/x86insn_nasm.gperf
-    COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/arch/x86/gen_x86_insn.py
+    COMMAND ${Python_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/arch/x86/gen_x86_insn.py
            ${CMAKE_CURRENT_BINARY_DIR}/x86insns.c
            ${CMAKE_CURRENT_BINARY_DIR}/x86insn_gas.gperf
            ${CMAKE_CURRENT_BINARY_DIR}/x86insn_nasm.gperf
diff --git a/modules/preprocs/nasm/CMakeLists.txt b/modules/preprocs/nasm/CMakeLists.txt
index e10a9dd1..28bbce65 100644
--- a/modules/preprocs/nasm/CMakeLists.txt
+++ b/modules/preprocs/nasm/CMakeLists.txt
@@ -1,9 +1,8 @@
 add_executable(genversion preprocs/nasm/genversion.c)
-get_target_property(_tmp_GENVERSION_EXE genversion LOCATION)
 add_custom_command(
     OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/version.mac
-    COMMAND ${_tmp_GENVERSION_EXE} ${CMAKE_CURRENT_BINARY_DIR}/version.mac
-    DEPENDS ${_tmp_GENVERSION_EXE}
+    COMMAND genversion ${CMAKE_CURRENT_BINARY_DIR}/version.mac
+    DEPENDS genversion
     )
 
 YASM_GENMACRO(
diff --git a/plugins/x86/CMakeLists.txt b/plugins/x86/CMakeLists.txt
index d0e10dae..2ae337e8 100644
--- a/plugins/x86/CMakeLists.txt
+++ b/plugins/x86/CMakeLists.txt
@@ -74,11 +74,11 @@ IF (NOT YASM_LIBRARY)
     MESSAGE(FATAL_ERROR "Could not find yasm library")
 ENDIF (NOT YASM_LIBRARY)
 
-INCLUDE(FindPythonInterp)
+INCLUDE(FindPython)
 
-IF (NOT PYTHON_EXECUTABLE)
+IF (NOT Python_EXECUTABLE)
     MESSAGE(FATAL_ERROR "Could not find Python executable")
-ENDIF (NOT PYTHON_EXECUTABLE)
+ENDIF (NOT Python_EXECUTABLE)
 
 INCLUDE_DIRECTORIES(${SOURCE_DIR})
 INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
@@ -88,7 +88,7 @@ ADD_CUSTOM_COMMAND(
         ${CMAKE_CURRENT_BINARY_DIR}/x86insns.c
         ${CMAKE_CURRENT_BINARY_DIR}/x86insn_gas.gperf
         ${CMAKE_CURRENT_BINARY_DIR}/x86insn_nasm.gperf
-    COMMAND ${PYTHON_EXECUTABLE} ${SOURCE_DIR}/gen_x86_insn.py
+    COMMAND ${Python_EXECUTABLE} ${SOURCE_DIR}/gen_x86_insn.py
            ${CMAKE_CURRENT_BINARY_DIR}/x86insns.c
            ${CMAKE_CURRENT_BINARY_DIR}/x86insn_gas.gperf
            ${CMAKE_CURRENT_BINARY_DIR}/x86insn_nasm.gperf
