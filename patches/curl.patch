diff --git a/CMakeLists.txt b/CMakeLists.txt
index a88f49b3b..df6507c13 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -46,6 +46,13 @@ include(CMakeDependentOption)
 include(CheckCCompilerFlag)
 
 project(CURL C)
+include(flags OPTIONAL)
+if(DEFINED XP_NAMESPACE)
+  set(XP_OPT_INSTALL EXCLUDE_FROM_ALL)
+  set(nameSpace ${XP_NAMESPACE}::)
+else()
+  set(nameSpace ${PROJECT_NAME}::)
+endif()
 
 file(STRINGS ${CURL_SOURCE_DIR}/include/curl/curlver.h CURL_VERSION_H_CONTENTS REGEX "#define LIBCURL_VERSION( |_NUM )")
 string(REGEX MATCH "#define LIBCURL_VERSION \"[^\"]*"
@@ -150,7 +157,12 @@ set(CURL_LIBS "")
 
 if(ENABLE_ARES)
   set(USE_ARES 1)
-  find_package(CARES REQUIRED)
+  if(COMMAND xpFindPkg)
+    xpFindPkg(PKGS cares)
+    set(CARES_LIBRARY ${CARES_LIBRARIES})
+  else()
+    find_package(CARES REQUIRED)
+  endif()
   list(APPEND CURL_LIBS ${CARES_LIBRARY})
 endif()
 
@@ -429,7 +441,11 @@ if(use_core_foundation)
 endif()
 
 if(CMAKE_USE_OPENSSL)
-  find_package(OpenSSL REQUIRED)
+  if(COMMAND xpFindPkg)
+    xpFindPkg(PKGS openssl)
+  else()
+    find_package(OpenSSL REQUIRED)
+  endif()
   set(SSL_ENABLED ON)
   set(USE_OPENSSL ON)
 
@@ -437,7 +453,13 @@ if(CMAKE_USE_OPENSSL)
   # version of CMake.  This allows our dependents to get our dependencies
   # transitively.
   if(NOT CMAKE_VERSION VERSION_LESS 3.4)
-    list(APPEND CURL_LIBS OpenSSL::SSL OpenSSL::Crypto)
+    if(TARGET xpro::ssl AND TARGET xpro::crypto)
+      list(APPEND CURL_LIBS xpro::ssl xpro::crypto)
+    elseif(TARGET OpenSSL::SSL AND TARGET OpenSSL::Crypto)
+      list(APPEND CURL_LIBS OpenSSL::SSL OpenSSL::Crypto)
+    else()
+      message(AUTHOR_WARNING "TARGET OpenSSL not found")
+    endif()
   else()
     list(APPEND CURL_LIBS ${OPENSSL_LIBRARIES})
     include_directories(${OPENSSL_INCLUDE_DIR})
@@ -682,7 +704,11 @@ check_library_exists("${CURL_LIBS}" dlopen "" HAVE_DLOPEN)
 set(HAVE_LIBZ OFF)
 set(HAVE_ZLIB_H OFF)
 set(USE_ZLIB OFF)
-optional_dependency(ZLIB)
+if(COMMAND xpFindPkg)
+  xpFindPkg(PKGS zlib)
+else()
+  optional_dependency(ZLIB)
+endif()
 if(ZLIB_FOUND)
   set(HAVE_ZLIB_H ON)
   set(HAVE_LIBZ ON)
@@ -692,7 +718,13 @@ if(ZLIB_FOUND)
   # version of CMake.  This allows our dependents to get our dependencies
   # transitively.
   if(NOT CMAKE_VERSION VERSION_LESS 3.4)
-    list(APPEND CURL_LIBS ZLIB::ZLIB)
+    if(TARGET xpro::zlibstatic)
+      list(APPEND CURL_LIBS xpro::zlibstatic)
+    elseif(TARGET ZLIB::ZLIB)
+      list(APPEND CURL_LIBS ZLIB::ZLIB)
+    else()
+      message(AUTHOR_WARNING "TARGET ZLIB not found")
+    endif()
   else()
     list(APPEND CURL_LIBS ${ZLIB_LIBRARIES})
     include_directories(${ZLIB_INCLUDE_DIRS})
@@ -736,7 +768,14 @@ set(HAVE_LIBSSH2 OFF)
 set(HAVE_LIBSSH2_H OFF)
 
 if(CMAKE_USE_LIBSSH2)
-  find_package(LibSSH2)
+  if(COMMAND xpFindPkg)
+    xpFindPkg(PKGS libssh2)
+    get_target_property(LIBSSH2_INCLUDE_DIR ${LIBSSH2_LIBRARIES} INTERFACE_INCLUDE_DIRECTORIES)
+    list(FILTER LIBSSH2_INCLUDE_DIR INCLUDE REGEX "/libssh2$") # include dir ending with /libssh2
+    set(LIBSSH2_LIBRARY ${LIBSSH2_LIBRARIES})
+  else()
+    find_package(LibSSH2)
+  endif()
   if(LIBSSH2_FOUND)
     list(APPEND CURL_LIBS ${LIBSSH2_LIBRARY})
     set(CMAKE_REQUIRED_LIBRARIES ${LIBSSH2_LIBRARY})
@@ -1345,7 +1384,11 @@ endfunction()
 
 include(GNUInstallDirs)
 
-set(CURL_INSTALL_CMAKE_DIR ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
+if(DEFINED XP_INSTALL_CMAKEDIR)
+  set(CURL_INSTALL_CMAKE_DIR ${XP_INSTALL_CMAKEDIR})
+else()
+  set(CURL_INSTALL_CMAKE_DIR ${CMAKE_INSTALL_DATADIR}/cmake/${PROJECT_NAME})
+endif()
 set(TARGETS_EXPORT_NAME "${PROJECT_NAME}Targets")
 set(generated_dir "${CMAKE_CURRENT_BINARY_DIR}/generated")
 set(project_config "${generated_dir}/${PROJECT_NAME}Config.cmake")
@@ -1490,7 +1533,7 @@ set(exec_prefix             "\${prefix}")
 set(includedir              "\${prefix}/include")
 set(LDFLAGS                 "${CMAKE_SHARED_LINKER_FLAGS}")
 set(LIBCURL_LIBS            "")
-set(libdir                  "${CMAKE_INSTALL_PREFIX}/lib")
+set(libdir                  "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}")
 foreach(_lib ${CMAKE_C_IMPLICIT_LINK_LIBRARIES} ${CURL_LIBS})
   if(TARGET "${_lib}")
     set(_libname "${_lib}")
@@ -1538,6 +1581,7 @@ configure_file("${CURL_SOURCE_DIR}/curl-config.in"
                "${CURL_BINARY_DIR}/curl-config" @ONLY)
 install(FILES "${CURL_BINARY_DIR}/curl-config"
         DESTINATION ${CMAKE_INSTALL_BINDIR}
+        ${XP_OPT_INSTALL}
         PERMISSIONS
           OWNER_READ OWNER_WRITE OWNER_EXECUTE
           GROUP_READ GROUP_EXECUTE
@@ -1547,7 +1591,8 @@ install(FILES "${CURL_BINARY_DIR}/curl-config"
 configure_file("${CURL_SOURCE_DIR}/libcurl.pc.in"
                "${CURL_BINARY_DIR}/libcurl.pc" @ONLY)
 install(FILES "${CURL_BINARY_DIR}/libcurl.pc"
-        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
+        ${XP_OPT_INSTALL}
+        DESTINATION ${CMAKE_INSTALL_DATADIR}/pkgconfig)
 
 # install headers
 install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/include/curl"
@@ -1572,13 +1617,14 @@ configure_package_config_file(CMake/curl-config.cmake.in
 if(CURL_ENABLE_EXPORT_TARGET)
   install(
           EXPORT "${TARGETS_EXPORT_NAME}"
-          NAMESPACE "${PROJECT_NAME}::"
+          NAMESPACE "${nameSpace}"
           DESTINATION ${CURL_INSTALL_CMAKE_DIR}
   )
 endif()
 
 install(
         FILES ${version_config} ${project_config}
+        ${XP_OPT_INSTALL}
         DESTINATION ${CURL_INSTALL_CMAKE_DIR}
 )
 
diff --git a/include/curl/curl.h b/include/curl/curl.h
index 6b6ac8a05..fa5f382c0 100644
--- a/include/curl/curl.h
+++ b/include/curl/curl.h
@@ -244,7 +244,7 @@ typedef int (*curl_xferinfo_callback)(void *clientp,
      time for those who feel adventurous. The practical minimum is about
      400 bytes since libcurl uses a buffer of this size as a scratch area
      (unrelated to network send operations). */
-#define CURL_MAX_WRITE_SIZE 16384
+#define CURL_MAX_WRITE_SIZE 524288 /* = 32 * 16384 (the default) */
 #endif
 
 #ifndef CURL_MAX_HTTP_HEADER
diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index 2575288f7..8638f3916 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -142,5 +142,5 @@ install(TARGETS ${LIB_NAME}
 
 export(TARGETS ${LIB_NAME}
        APPEND FILE ${PROJECT_BINARY_DIR}/libcurl-target.cmake
-       NAMESPACE ${PROJECT_NAME}::
+       NAMESPACE ${nameSpace}
 )
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 6f9c5d658..f2cb1b58f 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -110,5 +110,5 @@ target_link_libraries(${EXE_NAME} libcurl ${CURL_LIBS})
 install(TARGETS ${EXE_NAME} EXPORT ${TARGETS_EXPORT_NAME} DESTINATION ${CMAKE_INSTALL_BINDIR})
 export(TARGETS ${EXE_NAME}
        APPEND FILE ${PROJECT_BINARY_DIR}/curl-target.cmake
-       NAMESPACE ${PROJECT_NAME}::
+       NAMESPACE ${nameSpace}
 )
